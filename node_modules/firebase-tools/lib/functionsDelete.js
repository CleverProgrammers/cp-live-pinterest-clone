"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteFunctions = void 0;
const helper = require("./functionsDeployHelper");
const queue_1 = require("./throttler/queue");
const tasks = require("./deploy/functions/tasks");
const deploymentTimer_1 = require("./deploy/functions/deploymentTimer");
const errorHandler_1 = require("./deploy/functions/errorHandler");
async function deleteFunctions(functionsNamesToDelete, scheduledFunctionNamesToDelete, projectId, appEngineLocation) {
    const cloudFunctionsQueue = new queue_1.Queue({});
    const schedulerQueue = new queue_1.Queue({});
    const timer = new deploymentTimer_1.DeploymentTimer();
    const errorHandler = new errorHandler_1.ErrorHandler();
    const taskParams = {
        projectId,
        timer,
        errorHandler,
    };
    functionsNamesToDelete.forEach((fnName) => {
        const deleteFunctionTask = tasks.deleteFunctionTask(taskParams, fnName);
        cloudFunctionsQueue.run(deleteFunctionTask);
    });
    scheduledFunctionNamesToDelete.forEach((fnName) => {
        const deleteSchedulerTask = tasks.deleteScheduleTask(taskParams, fnName, appEngineLocation);
        schedulerQueue.run(deleteSchedulerTask);
    });
    const queuePromises = [cloudFunctionsQueue.wait(), schedulerQueue.wait()];
    cloudFunctionsQueue.close();
    schedulerQueue.close();
    cloudFunctionsQueue.process();
    schedulerQueue.process();
    await Promise.all(queuePromises);
    helper.logAndTrackDeployStats(cloudFunctionsQueue, errorHandler);
    errorHandler.printErrors();
}
exports.deleteFunctions = deleteFunctions;
