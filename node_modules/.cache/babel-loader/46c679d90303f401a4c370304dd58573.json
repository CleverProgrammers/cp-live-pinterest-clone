{"ast":null,"code":"import \"@firebase/logger\";\nimport \"@firebase/util\";\nimport \"@firebase/webchannel-wrapper\";\nimport \"tslib\";\nimport { b as e, u as r, Q as o } from \"./prebuilt-7840cb8c-52081c7f.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Prototype patches bundle loading to Firestore.\n */\n\nfunction t(o) {\n  o.prototype.loadBundle = e, o.prototype.namedQuery = r;\n}\n\nt(o);\nexport { t as registerBundle };","map":{"version":3,"sources":["../../index.bundle.ts"],"names":["registerBundle","instance","prototype","loadBundle","namedQuery","Firestore"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;SAsBgBA,C,CAAeC,C,EAAAA;AAC7BA,EAAAA,CAAAA,CAASC,SAATD,CAAmBE,UAAnBF,GAAgCE,CAAhCF,EACAA,CAAAA,CAASC,SAATD,CAAmBG,UAAnBH,GAAgCG,CADhCH;;;AAIFD,CAAAA,CAAeK,CAAfL,CAAAA","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Firestore, loadBundle, namedQuery } from './export';\n\n/**\n * Prototype patches bundle loading to Firestore.\n */\nexport function registerBundle(instance: typeof Firestore): void {\n  instance.prototype.loadBundle = loadBundle;\n  instance.prototype.namedQuery = namedQuery;\n}\n\nregisterBundle(Firestore);\n"]},"metadata":{},"sourceType":"module"}