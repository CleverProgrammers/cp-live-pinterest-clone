export declare const CLOUD_RESOURCE: {
    /** Name of the cloud provider. Example values are aws, azure, gcp. */
    PROVIDER: string;
    /** The cloud account id used to identify different entities. */
    ACCOUNT_ID: string;
    /** A specific geographical location where different entities can run. */
    REGION: string;
    /** Zones are a sub set of the region connected through low-latency links. */
    ZONE: string;
};
/**
 * Attributes defining a compute unit (e.g. Container, Process, Lambda
 * Function).
 * */
export declare const CONTAINER_RESOURCE: {
    /** The container name. */
    NAME: string;
    /** The container id. */
    ID: string;
    /** The name of the image the container was built on. */
    IMAGE_NAME: string;
    /** The container image tag. */
    IMAGE_TAG: string;
};
/** Attributes defining a computing instance (e.g. host). */
export declare const HOST_RESOURCE: {
    /**
     * Unique host id. For Cloud this must be the instance_id assigned by the
     * cloud provider
     */
    ID: string;
    /**
     * Name of the host. It may contain what hostname returns on Unix systems,
     * the fully qualified, or a name specified by the user.
     */
    NAME: string;
    /** Type of host. For Cloud this must be the machine type.*/
    TYPE: string;
    /** Name of the VM image or OS install the host was instantiated from. */
    IMAGE_NAME: string;
    /** VM image id. For Cloud, this value is from the provider. */
    IMAGE_ID: string;
    /** The version string of the VM image */
    IMAGE_VERSION: string;
};
/** Attributes defining a deployment service (e.g. Kubernetes). */
export declare const K8S_RESOURCE: {
    /** The name of the cluster that the pod is running in. */
    CLUSTER_NAME: string;
    /** The name of the namespace that the pod is running in. */
    NAMESPACE_NAME: string;
    /** The name of the pod. */
    POD_NAME: string;
    /** The name of the deployment. */
    DEPLOYMENT_NAME: string;
};
/** Attributes describing the telemetry library. */
export declare const TELEMETRY_SDK_RESOURCE: {
    /** The name of the telemetry library. */
    NAME: string;
    /** The language of telemetry library and of the code instrumented with it. */
    LANGUAGE: string;
    /** The version string of the telemetry library */
    VERSION: string;
};
/** Attributes describing a service instance. */
export declare const SERVICE_RESOURCE: {
    /** Logical name of the service.  */
    NAME: string;
    /** A namespace for `service.name`. */
    NAMESPACE: string;
    /** The string ID of the service instance. */
    INSTANCE_ID: string;
    /** The version string of the service API or implementation. */
    VERSION: string;
};
/** Attributes describing a Process. */
export declare const PROCESS_RESOURCE: {
    /** A command which launced this proces.  */
    COMMAND: string;
    /** The full command with arguments as string.  */
    COMMAND_LINE: string;
    /** A name given to currently running porcess defaults to executable (process.title) .  */
    NAME: string;
    /** An owner of currently running process.  */
    OWNER: string;
    /** The full path to the process executable.  */
    PATH: string;
    /** Process identifier of currently running process.  */
    PID: string;
};
//# sourceMappingURL=constants.d.ts.map