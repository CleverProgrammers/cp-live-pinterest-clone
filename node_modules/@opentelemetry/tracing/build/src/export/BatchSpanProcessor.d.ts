import { SpanProcessor } from '../SpanProcessor';
import { BufferConfig } from '../types';
import { ReadableSpan } from './ReadableSpan';
import { SpanExporter } from './SpanExporter';
/**
 * Implementation of the {@link SpanProcessor} that batches spans exported by
 * the SDK then pushes them to the exporter pipeline.
 */
export declare class BatchSpanProcessor implements SpanProcessor {
    private readonly _exporter;
    private readonly _bufferSize;
    private readonly _bufferTimeout;
    private _finishedSpans;
    private _timer;
    private _isShutdown;
    private _shuttingDownPromise;
    constructor(_exporter: SpanExporter, config?: BufferConfig);
    forceFlush(): Promise<void>;
    onStart(span: ReadableSpan): void;
    onEnd(span: ReadableSpan): void;
    shutdown(): Promise<void>;
    /** Add a span in the buffer. */
    private _addToBuffer;
    /** Send the span data list to exporter */
    private _flush;
    private _maybeStartTimer;
    private _clearTimer;
}
//# sourceMappingURL=BatchSpanProcessor.d.ts.map