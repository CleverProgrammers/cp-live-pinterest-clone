"use strict";
/*
 * Copyright The OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.setCorrelationContext = exports.getCorrelationContext = void 0;
const api_1 = require("@opentelemetry/api");
const CORRELATION_CONTEXT = api_1.createContextKey('OpenTelemetry Distributed Contexts Key');
/**
 * @param {Context} Context that manage all context values
 * @returns {CorrelationContext} Extracted correlation context from the context
 */
function getCorrelationContext(context) {
    return (context.getValue(CORRELATION_CONTEXT) || undefined);
}
exports.getCorrelationContext = getCorrelationContext;
/**
 * @param {Context} Context that manage all context values
 * @param {CorrelationContext} correlation context that will be set in the actual context
 */
function setCorrelationContext(context, correlationContext) {
    return context.setValue(CORRELATION_CONTEXT, correlationContext);
}
exports.setCorrelationContext = setCorrelationContext;
//# sourceMappingURL=correlation-context.js.map